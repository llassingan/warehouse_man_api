services:
  api:
    build: .
    container_name: api_service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
    command: >
      sh -c "alembic upgrade head && fastapi dev src/ --host 0.0.0.0 --port 8000"

  db:
    image: postgres:15
    container_name: postgres_db
    env_file: .env
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis_cache
    ports:
      - "${REDIS_PORT}:6379"
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build: .
    container_name: celery_worker
    command: celery -A src.celery_task.c_app worker --loglevel=info
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./api:/app
    healthcheck:
      test: ["CMD-SHELL", "celery -A src.worker inspect ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  db_data:
